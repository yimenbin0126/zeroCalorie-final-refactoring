{"ast":null,"code":"import Header from \"@/components/common/Header.vue\";\nexport default {\n  name: \"question_public_detail\",\n  data: function () {\n    return {\n      heart_click: null,\n      filelist: null,\n      s_dto: null,\n      user: JSON.parse(sessionStorage.getItem('user'))\n    };\n  },\n  components: {\n    Header\n  },\n  mounted() {\n    this.$axios.get('/service/question-public-detail').then(res => {\n      this.heart_click = res.data.heart_click;\n      this.filelist = res.data.filelist;\n      this.s_dto = res.data.s_dto;\n      this.s_dto.description.replace(\"\\r\\n\", \"<br>\");\n    });\n  },\n  methods: {\n    service_allservice: function () {\n      location.href = '/service/allService';\n    },\n    service_question_member: function () {\n      location.href = '/service/question-member';\n    },\n    service_question_public: function () {\n      location.href = '/service/question-public';\n    },\n    e_like_heart_n_click: function () {\n      this.$axios.post('/service/question-public-detail', {\n        e_heart_check: \"like_Y\",\n        e_bno: this.$axios.e_bno_value.value\n      }).then(res => {\n        if (res.data == \"O\") {\n          // 하트 칠하기\n          this.$refs.e_like_heart_n.style.display = \"none\";\n          this.$refs.e_like_heart_y.style.display = \"block\";\n          // 숫자 증가\n          var heart_num = this.$axios.e_like_num.innerText;\n          this.$refs.e_like_num.innerText = parseInt(heart_num) + 1;\n        } else {\n          alert('좋아요는 한번만 누를 수 있습니다.');\n        }\n      });\n    },\n    e_like_heart_y_click: function () {\n      this.$axios.post('/service/question-public-detail', null, {\n        e_heart_check: \"like_N\",\n        e_bno: this.$refs.e_bno_value.value\n      }).then(res => {\n        if (res.data == \"O\") {\n          // 하트 칠하기\n          this.$refs.e_like_heart_n.style.display = \"block\";\n          this.$refs.e_like_heart_y.style.display = \"none\";\n          // 숫자 감소\n          var heart_num = this.$refs.e_like_num.innerText;\n          this.$refs.e_like_num.innerText = parseInt(heart_num) - 1;\n        } else {\n          alert('좋아요는 한번만 누를 수 있습니다.');\n        }\n      });\n    },\n    e_dislike_heart_n_click: function () {\n      this.$axios.post('/service/question-public-detail', {\n        e_heart_check: \"dislike_Y\",\n        e_bno: this.$refs.e_bno_value.value\n      }).then(res => {\n        if (res.data == \"O\") {\n          // 하트 칠하기\n          this.$refs.e_dislike_heart_n.style.display = \"none\";\n          this.$refs.e_dislike_heart_y.style.display = \"block\";\n          // 숫자 증가\n          var heart_num = this.$refs.e_dislike_num.innerText;\n          this.$refs.e_dislike_num.innerText = parseInt(heart_num) + 1;\n        } else {\n          alert('싫어요는 한번만 누를 수 있습니다.');\n        }\n      });\n    },\n    e_dislike_heart_y_click: function () {\n      this.$axios.post('/service/question-public-detail', {\n        e_heart_check: \"dislike_N\",\n        e_bno: this.$axios.e_bno_value.value\n      }).then(res => {\n        if (res.data == \"O\") {\n          // 하트 칠하기\n          this.$refs.e_dislike_heart_n.style.display = \"block\";\n          this.$refs.e_dislike_heart_y.style.display = \"none\";\n          // 숫자 증가\n          var heart_num = this.$refs.e_dislike_num.innerText;\n          this.$refs.e_dislike_num.innerText = parseInt(heart_num) - 1;\n        } else {\n          alert('싫어요는 한번만 누를 수 있습니다.');\n        }\n      });\n    },\n    e_btn_reply_click: function (e) {\n      // eslint-disable-next-line\n      var formData = new FormData(e_btn_reply_form);\n      var con_reply = confirm('정말 답글을 작성하시겠습니까?');\n      if (con_reply == true) {\n        this.$axios.get('/service/question-public-detail-button', formData).then(res => {\n          location.href = res;\n        });\n      } else {\n        e.preventDefault();\n      }\n    },\n    e_btn_delete_click: function (e) {\n      // eslint-disable-next-line\n      var formData = new FormData(e_btn_delete_form);\n      var con_del = confirm('정말 글을 삭제하시겠습니까?');\n      if (con_del == true) {\n        // 폼 데이터 보내기\n        this.$axios.get('/service/question-public-detail-button', formData).then(res => {\n          alert('글을 삭제했습니다.');\n          location.href = res;\n        });\n      } else {\n        e.preventDefault();\n      }\n    },\n    e_btn_fix_click: function (e) {\n      // eslint-disable-next-line\n      var formData = new FormData(e_btn_fix_form);\n      var con_fix = confirm('정말 글을 수정하시겠습니까?');\n      if (con_fix == true) {\n        // 폼 데이터 보내기\n        this.$axios.get('/service/question-public-detail-button', formData).then(res => {\n          location.href = res;\n        });\n      } else {\n        e.preventDefault();\n      }\n    },\n    // 댓글, 답글 작성\n    com_input_c_i_btn_c_i_btn_Y_click: function (e) {\n      e.preventDefault();\n      var comment_code = this.$refs.com_input_c_i_textarea_textarea.value;\n      if (comment_code.length == 0) {\n        comment_code = \" \";\n      }\n      // 폼 데이터 보내기\n      this.$axios.get('/service/question-public-comment/insert', {\n        \"bno\": this.$refs.hidden_bno.value,\n        \"comment_code\": comment_code\n      }).then(res => {\n        if (res == \"X\") {\n          alert('댓글 내용을 제대로 입력해주세요.');\n        } else {\n          location.href = \"/service/question-public-detail?bno=\" + this.$refs.hidden_bno.value;\n        }\n      });\n    },\n    com_btn_com_btn_reply_click: function (e) {\n      // 댓글의 답글\n      if (!document.querySelector('.c_l_comment_new') && !document.querySelector('.c_l_reply_new') && !document.querySelector('.c_l_reply_fix') && !document.querySelector('.c_l_comment_fix')) {\n        // 아래에 답글 작성 폼 생김\n        var html = '<div class=\"c_l_comment_new\">';\n        html += '<div class=\"reply_new_blank\">↳</div>';\n        html += '<div class=\"r_new_content\">';\n        html += '<textarea wrap=\"hard\" placeholder=\"내용을 입력해 주세요.\" id=\"e_cont_detail_input\"></textarea>';\n        html += '<div class=\"c_i_new_btn\"><button>등록</button></div>';\n        html += '</div></div></div>';\n        // eslint-disable-next-line\n        e.target.parentElement.parentElement.parentElement.parentElement.insertAdjacentHTML(afterend, html);\n        // 답글 취소시\n        // eslint-disable-next-line\n        e.target.insertAdjacentHTML(afterend, '<a class=\"com_reply_del_click\"><b>답글취소</b></a>');\n        e.target.style.display = 'none';\n        document.querySelector('.com_reply_del_click').addEventListener('click', function () {\n          document.querySelector('.com_reply_del_click').remove();\n          document.querySelector('.c_l_comment_new').remove();\n          e.target.style.display = 'block';\n        });\n        // 작성 완료시\n        if (document.querySelector('.c_i_new_btn button')) {\n          document.querySelector('.c_i_new_btn button').addEventListener('click', function (event) {\n            var origin_code_re = e.target.parentElement.parentElement.firstElementChild.value;\n            var to_nickname_re = e.target.parentElement.parentElement.children[1].value;\n            var comment_code_re = document.querySelector('.r_new_content textarea').value;\n            var con_del = confirm('정말 답글을 작성하시겠습니까?');\n            if (con_del == true) {\n              this.$axios.get('/service/question-public-reply/insert', {\n                \"bno\": this.$refs.hidden_bno.value,\n                \"origin_code\": origin_code_re,\n                \"to_nickname\": to_nickname_re,\n                \"comment_code\": comment_code_re\n              }).then(res => {\n                if (res.data == \"X\") {\n                  alert('댓글 내용을 제대로 입력해주세요.');\n                } else {\n                  location.href = \"/service/question-public-detail?bno=\" + this.$refs.hidden_bno.value;\n                }\n              });\n            } else {\n              event.preventDefault();\n            }\n          });\n        }\n      } else {\n        // 답글이 이미 있다\n        alert(\"댓글을 작성해주세요.\");\n      }\n    },\n    com_btn_com_btn_fix_a_click: function (e) {\n      // 댓글 수정\n      if (!document.querySelector('.c_l_comment_new') && !document.querySelector('.c_l_reply_new') && !document.querySelector('.c_l_reply_fix') && !document.querySelector('.c_l_comment_fix')) {\n        // 수정폼 생성 + 원본 가리기\n        var origin_comment = e.target.parentElement.parentElement.children[2].value;\n        e.target.parentElement.parentElement.parentElement.parentElement.style.display = \"none\";\n        var html = '<div class=\"c_l_comment_fix\">';\n        html += '<div class=\"c_l_comment_fix_content\">';\n        html += '<div class=\"c_fix_textarea\">';\n        html += '<textarea wrap=\"hard\" placeholder=\"내용을 입력해 주세요.\" name=\"description\" id=\"fix_con_input\">' + origin_comment + '</textarea>';\n        html += '</div>';\n        html += '<div class=\"fix_con_btn\"><button>수정하기</button></div>';\n        html += '</div>';\n        html += '</div>';\n        // eslint-disable-next-line\n        e.target.parentElement.parentElement.parentElement.parentElement.insertAdjacentHTML(afterend, html);\n        // 수정 취소폼으로 만들기\n        // eslint-disable-next-line\n        e.target.insertAdjacentHTML(beforeend, '<a class=\"com_fix_del_click\" style=\"text-decoration:none\"><b style=\"font-size:13px; color: gray;\">수정취소</b></a>');\n        document.querySelector('.com_fix_del_click').click(function () {\n          document.querySelector('.com_fix_del_click').remove();\n          document.querySelector('.c_l_comment_fix').remove();\n          e.target.parentElement.parentElement.parentElement.parentElement.style.display = \"flex\";\n        });\n        // 수정폼 완료시 + 수정폼 삭제 + 원본 보여주기\n        if (document.querySelector('.c_l_comment_fix_content .fix_con_btn button')) {\n          document.querySelector('.c_l_comment_fix_content .fix_con_btn button').addEventListener('click', function (event) {\n            var c_code_fix = e.target.parentElement.parentElement.firstElementChild.value;\n            var comment_code_fix = document.querySelector('.c_fix_textarea textarea').value;\n            var con_fix = confirm('정말 답글을 수정하시겠습니까?');\n            if (con_fix == true) {\n              this.$axios.get('/service/question-public-comment/fix', {\n                \"bno\": this.$refs.hidden_bno.value,\n                \"c_code\": c_code_fix,\n                \"comment_code\": comment_code_fix\n              }).then(res => {\n                if (res.data == \"X\") {\n                  alert('댓글 내용을 제대로 입력해주세요.');\n                } else {\n                  location.href = \"/service/question-public-detail?bno=\" + this.$refs.hidden_bno.value;\n                }\n              });\n            } else {\n              event.preventDefault();\n            }\n          });\n        }\n      } else {\n        // 답글이 이미 있다\n        alert(\"댓글을 작성해주세요.\");\n      }\n    },\n    com_btn_com_btn_del_a_click: function (e) {\n      // 댓글 삭제\n      var c_code_del = e.target.parentElement.parentElement.firstElementChild.value;\n      var con_del = confirm('정말 댓글을 삭제하시겠습니까?');\n      if (con_del == true) {\n        this.$axios.get('/service/question-public-comment/delete', {\n          \"bno\": this.$refs.hidden_bno.value,\n          \"c_code\": c_code_del\n        }).then(res => {\n          if (res.data == \"X\") {\n            alert('댓글 내용을 제대로 입력해주세요.');\n          } else {\n            // eslint-disable-next-line\n            location.href = \"/service/question-public-detail?bno=\" + hidden_bno;\n          }\n        });\n      } else {\n        e.preventDefault();\n      }\n    },\n    reply_btn_reply_click: function (e) {\n      // 답글의 답글\n      if (!document.querySelector('.c_l_comment_new') && !document.querySelector('.c_l_reply_new') && !document.querySelector('.c_l_reply_fix') && !document.querySelector('.c_l_comment_fix')) {\n        // 아래에 답글 작성 폼 생김\n        var html = '<div class=\"c_l_reply_new\">';\n        html += '<div class=\"reply_new_blank\">↳</div>';\n        html += '<div class=\"r_new_content\">';\n        html += '<textarea wrap=\"hard\" placeholder=\"내용을 입력해 주세요.\" id=\"e_cont_detail_input\"></textarea>';\n        html += '<div class=\"c_i_new_btn\"><button>등록</button></div>';\n        html += '</div></div></div>';\n        // eslint-disable-next-line\n        e.target.parentElement.parentElement.parentElement.parentElement.insertAdjacentHTML(afterend, html);\n        // 답글 취소폼으로 만들기\n        // eslint-disable-next-line\n        e.target.insertAdjacentHTML(afterend, '<a class=\"reply_reply_del_click\"><b>답글취소</b></a>');\n        e.target.style.display = 'none';\n        // 답글 취소시\n        document.querySelector('.reply_reply_del_click').click(function () {\n          document.querySelector('.reply_reply_del_click').remove();\n          document.querySelector('.c_l_reply_new').remove();\n          e.target.style.display = 'block';\n        });\n        // 작성 완료시\n        document.querySelector('.c_i_new_btn button').addEventListener('click', function (event) {\n          var origin_code_reply = e.target.parentElement.parentElement.firstElementChild.value;\n          var to_nickname_reply = e.target.parentElement.parentElement.children[1].value;\n          var comment_code_reply = document.querySelector('.r_new_content textarea').value;\n          var c_reply_del = confirm('정말 답글을 작성하시겠습니까?');\n          if (c_reply_del == true) {\n            this.$axios.get('/service/question-public-reply/insert', {\n              \"bno\": this.$refs.hidden_bno.value,\n              \"origin_code\": origin_code_reply,\n              \"to_nickname\": to_nickname_reply,\n              \"comment_code\": comment_code_reply\n            }).then(res => {\n              if (res.data == \"X\") {\n                alert('답글 내용을 제대로 입력해주세요.');\n              } else {\n                location.href = \"/service/question-public-detail?bno=\" + this.$refs.hidden_bno.value;\n              }\n            });\n          } else {\n            event.preventDefault();\n          }\n        });\n      } else if (document.querySelectorAll('.c_l_reply_new').length == 1) {\n        // 답글이 이미 있다\n        alert(\"댓글을 작성해주세요.\");\n      }\n    },\n    reply_btn_fix_click: function (e) {\n      // 답글 수정\n      if (!document.querySelector('.c_l_comment_new') && !document.querySelector('.c_l_reply_new') && !document.querySelector('.c_l_reply_fix') && !document.querySelector('.c_l_comment_fix')) {\n        // 수정폼 생성 + 원본 가리기\n        var reply_origin_comment = e.target.parentElement.parentElement.children[2].value;\n        e.target.parentElement.parentElement.parentElement.parentElement.style.display = \"none\";\n        var html = '<div class=\"c_l_reply_fix\">';\n        html += '<div class=\"r_fix_content\">';\n        html += '<div class=\"reply_blank\">↳</div>';\n        html += '<div class=\"r_fix_textarea\">';\n        html += '<textarea wrap=\"hard\" placeholder=\"내용을 입력해 주세요.\" name=\"description\" id=\"fix_reply_input\">' + reply_origin_comment + '</textarea>';\n        html += '</div>';\n        html += '<div class=\"fix_reply_btn\"><button>수정하기</button></div>';\n        html += '</div>';\n        html += '</div>';\n        // eslint-disable-next-line\n        e.target.parentElement.parentElement.parentElement.parentElement.insertAdjacentHTML(afterend, html);\n        // eslint-disable-next-line\n        e.target.insertAdjacentHTML(beforeend, '<a class=\"reply_fix_del_click\" style=\"text-decoration:none\"><b style=\"font-size:13px; color: gray; margin-left:20px;\">수정취소</b></a>');\n        document.querySelector('.reply_fix_del_click').click(function () {\n          document.querySelector('.reply_fix_del_click').remove();\n          document.querySelector('.c_l_reply_fix').remove();\n          e.target.parentElement.parentElement.parentElement.parentElement.style.display = \"flex\";\n        });\n        // 수정폼 완료시 + 수정폼 삭제 + 원본 보여주기\n        if (document.querySelector('.r_fix_content .fix_reply_btn button')) {\n          document.querySelector('.r_fix_content .fix_reply_btn button').addEventListener('click', function (event) {\n            var c_code_fix_reply = e.target.parentElement.parentElement.children[3].value;\n            var comment_code_fix_reply = document.querySelector('.r_fix_textarea textarea').value;\n            console.log(comment_code_fix_reply);\n            var c_reply_fix = confirm('정말 답글을 수정하시겠습니까?');\n            if (c_reply_fix == true) {\n              this.$axios.get('/service/question-public-reply/fix', {\n                \"bno\": this.$refs.hidden_bno.value,\n                \"c_code\": c_code_fix_reply,\n                \"comment_code\": comment_code_fix_reply\n              }).then(res => {\n                if (res.data == \"X\") {\n                  alert('답글 내용을 제대로 입력해주세요.');\n                } else {\n                  location.href = \"/service/question-public-detail?bno=\" + this.$refs.hidden_bno.value;\n                }\n              });\n            } else {\n              event.preventDefault();\n            }\n          });\n        }\n      } else {\n        // 답글이 이미 있다\n        alert(\"댓글을 작성해주세요.\");\n      }\n    },\n    reply_btn_del_click: function (e) {\n      // 답글 삭제\n      var c_code_del_reply = e.target.parentElement.parentElement.children[3].value;\n      var c_reply_del = confirm('정말 답글을 삭제하시겠습니까?');\n      if (c_reply_del == true) {\n        this.$axios.get('/service/question-public-reply/delete', {\n          \"bno\": this.$refs.hidden_bno.value,\n          \"c_code\": c_code_del_reply\n        }).then(res => {\n          if (res.data == \"X\") {\n            alert('답글 내용을 제대로 입력해주세요.');\n          } else {\n            location.href = \"/service/question-public-detail?bno=\" + this.$refs.hidden_bno.value;\n          }\n        });\n      } else {\n        e.preventDefault();\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}