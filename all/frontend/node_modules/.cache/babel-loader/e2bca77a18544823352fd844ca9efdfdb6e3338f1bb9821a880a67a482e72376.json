{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from \"@/components/common/Header.vue\";\nexport default {\n  name: \"question_public_myboard\",\n  data: function () {\n    return {\n      comment_List: null,\n      s_page: null,\n      s_dto_list: null,\n      user: JSON.parse(sessionStorage.getItem('user'))\n    };\n  },\n  components: {\n    Header\n  },\n  created() {\n    if (sessionStorage.getItem('user') != null) {\n      location.href = \"/service/question-public\";\n    }\n  },\n  mounted() {\n    this.$axios.get('/service/question-public-myboard').then(res => {\n      this.comment_List = res.data.comment_List;\n      this.s_page = res.data.s_page;\n      this.s_dto_list = res.data.s_dto_list;\n      // 페이지 값\n      for (var i = 1; i < this.s_page.page_EndBno - this.s_page.page_StartBno + 1; i++) {\n        if (i == this.s_page.page_NowBno) {\n          this.$refs.e_paging_num.innerHTML += '<a id=\"page_NowBno\">' + i + '</a>';\n        } else {\n          this.$refs.e_paging_num.innerHTML += '<a ' + 'href=\"' + \"/service/question-public-myboard?page_NowBno=\" + i +\n          // eslint-disable-next-line\n          '&standard=' + s_page.standard + '\"' + 'class=\"page_Bno\" id=\"page_Bno' + i + '\">' + i + '</a>';\n        }\n      }\n      var standard = this.s_page.standard;\n      document.getElementById(standard).setAttribute('selected', 'selected');\n    });\n  },\n  methods: {\n    service_allservice: function () {\n      location.href = '/service/allService';\n    },\n    service_question_member: function () {\n      location.href = '/service/question-member';\n    },\n    service_question_public: function () {\n      location.href = '/service/question-public';\n    },\n    service_question_public_detail(group_origin) {\n      var url = \"/service/question-public-detail?bno=\" + group_origin;\n      location.href = url;\n    },\n    service_question_public_write: function () {\n      location.href = '/service/question-public-write';\n    },\n    service_question_public_myboard_page_prev(page_StartBno, standard) {\n      var url = '/service/question-public-myboard?page_NowBno=' + page_StartBno + '&standard=' + standard;\n      location.href = url;\n    },\n    service_question_public_myboard_page_next(page_StartBno, standard) {\n      var url = '/service/question-public-myboard?page_NowBno=' + page_StartBno + '&standard=' + standard;\n      location.href = url;\n    },\n    // 글 상세 페이지\n    blist_title_click: function (e) {\n      var val = e.target.parentElement.parentElement.firstElementChild.value;\n      this.$refs.e_bno_val.value = val;\n      var url = '/service/question-public-detail?bno=' + val;\n      location.href = url;\n    },\n    // 검색 결과 - 엔터\n    s_content_input_keydown: function (e) {\n      if (e.keyCode == 13) {\n        e.preventDefault();\n        this.$refs.s_content_btn.click();\n      }\n    },\n    // 검색 결과 전달\n    s_content_btn_click: function () {\n      // 검색 기간 등 정보\n      let e_search_time = this.$refs.e_search_time_sel.value;\n      let e_search_type = this.$refs.e_search_type_sel.value;\n      let e_search_content = this.$refs.s_content_input.value;\n      let url = \"/service/question-public-myboard-search\";\n      url += \"?search_time=\" + e_search_time;\n      url += \"&search_type=\" + e_search_type;\n      url += \"&search_content=\" + e_search_content;\n      location.href = url;\n    },\n    e_con_choice_click: function () {\n      var origin_type = this.s_page.standard;\n      var result_type = this.$refs.e_con_choice.options[this.$refs.e_con_choice.selectedIndex].value;\n      // 값이 다르면 실행\n      if (origin_type != result_type) {\n        var url = \"/service/question-public-myboard?\";\n        url += \"standard=\" + result_type;\n        location.href = url;\n      }\n    },\n    checkbox_class_click: function () {\n      // 전체 선택으로 바꾸기\n      var c_list = document.querySelectorAll('.check_list');\n      for (var i = 0; i < c_list.length; i++) {\n        c_list[i].checked = document.querySelector('.checkbox_class input').checked;\n      }\n    },\n    e_hd_top_del_click: function (e) {\n      e.preventDefault();\n      // 선택한 파일 있으면 담기\n      let array_del = new Array();\n      let data = {};\n      let length_del = document.querySelectorAll('input[name=check_list]:checked').length;\n      if (length_del >= 1) {\n        for (var check_li in document.querySelectorAll('input[name=check_list]:checked')) {\n          array_del.push(check_li.value);\n        }\n        var con_del = confirm('정말 글을 삭제하시겠습니까?');\n        if (con_del == true) {\n          data = JSON.stringify(array_del);\n          this.$axios.post('/service/question-public-myboard-delete', data, {\n            headers: {\n              dataType: 'text',\n              contentType: 'application/json'\n            }\n          }).then(res => {\n            if (res.data == \"X\") {\n              alert('삭제할 게시물을 선택해 주세요.');\n            } else {\n              alert('게시물이 삭제되었습니다.');\n              location.href = \"/service/question-public-myboard\";\n            }\n          });\n        }\n      } else {\n        alert('삭제할 게시물을 선택해 주세요.');\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}