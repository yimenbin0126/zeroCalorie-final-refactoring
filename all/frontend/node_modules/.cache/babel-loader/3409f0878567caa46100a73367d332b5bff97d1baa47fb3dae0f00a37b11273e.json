{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar url = location.search;\nurl = url.replace('?bno=', '');\n// 파일이 늘때마다 고유 번호가 저장됨 (삭제해도 지워지지 않음)\nvar fileNo = 0;\n// 전체 파일 목록을 담을 배열 (삭제해도 지워지지 않음)\nvar filesArr = new Array();\n// 삭제한 파일들의 고유 번호 담기\nvar filesArr_del = new Array();\nimport Header from \"@/components/common/Header.vue\";\nexport default {\n  name: \"question_fix\",\n  data: function () {\n    return {\n      filelist: null,\n      s_dto: null,\n      user: JSON.parse(sessionStorage.getItem('user'))\n    };\n  },\n  components: {\n    Header\n  },\n  created() {\n    if (sessionStorage.getItem('user') != null) {\n      location.href = \"/service/question-member\";\n    }\n    this.getaxios();\n  },\n  methods: {\n    getaxios() {\n      this.$axios.get('/service/question-fix', {\n        params: {\n          \"bno\": url\n        }\n      }).then(res => {\n        if (res.data.filelist != null) {\n          this.filelist = JSON.parse(JSON.stringify(res.data.filelist));\n        }\n        if (res.data.s_dto != null) {\n          this.s_dto = JSON.parse(JSON.stringify(res.data.s_dto));\n        }\n      });\n    },\n    service_allservice: function () {\n      location.href = '/service/allService';\n    },\n    service_question_member: function () {\n      location.href = '/service/question-member';\n    },\n    service_question_public: function () {\n      location.href = '/service/question-public';\n    },\n    e_file_detail_input_change: function () {\n      // 첨부파일 최대 개수\n      var maxFileCount = 5;\n      // 기존 추가된 첨부파일 갯수\n      var allFileCount = document.querySelectorAll('.fileList').length;\n      // 첨부 가능한 파일 추가 갯수\n      var possibleFileCount = maxFileCount - allFileCount;\n      // 첨부파일 최대 갯수 한도 초과\n      if (possibleFileCount == 0) {\n        alert(\"첨부파일은 최대 \" + maxFileCount + \"개 까지만 첨부가 가능합니다.\");\n      }\n      // 현재 선택된 파일 갯수, 첨부 가능한 파일 갯수 중 최솟값 (추가 가능한 갯수까지 한정으로 추가) \n      for (const file of this.$refs.e_file_detail_input.files) {\n        file.is_delete = false;\n        filesArr.push(file);\n        // 파일 내용 읽기\n        var reader = new FileReader();\n        // onload = 읽기 동작이 성공적으로 완료되었을 때\n        reader.onload = function () {\n          // 개별 파일을 저장\n          reader.readAsDataURL(file);\n        };\n        // 목록 추가\n        let html = '';\n        html += '<div id=\"file' + fileNo + '\" class=\"fileList\" ref=\"fileList\">';\n        html += '   <p class=\"filename\">' + file.name + '</p>';\n        html += '   <a class=\"filedelete\" onclick=\"deleteFile(' + fileNo + ');\">❌</a>';\n        html += '</div>';\n        this.$refs.file_group.append(html);\n        fileNo++;\n      }\n      // 추가한 뒤 초기화\n      document.querySelector(\"input[type=file]\").value = \"\";\n    },\n    deleteFile(num) {\n      // 이미 삭제된 파일 해당 인덱스에 .is_delete = true 라는 키와 값을 추가해 구분\n      document.querySelector(\"#file\" + num).remove();\n      filesArr[num].is_delete = true;\n    },\n    prev_deleteFile(num) {\n      document.querySelector(\"#prev_file\" + num).remove();\n      filesArr_del.push(num);\n    },\n    e_btn_fix_btn_click: function (e) {\n      e.preventDefault();\n      // 폼 데이터에 값 담기\n      let formData = new FormData();\n      // 삭제한 파일 있으면 담기\n      if (filesArr_del.length >= 1) {\n        for (let i = 0; i < filesArr_del.length; i++) {\n          formData.append('file_del_num', filesArr_del[i]);\n        }\n      } else {\n        // null 방지 파일 값 전달\n        formData.append('file_del_num', \"\");\n      }\n      // 파일을 폼데이터에 담기\n      for (let i = 0; i < filesArr.length; i++) {\n        // 삭제되지 않은 파일만 폼데이터에 담기\n        if (!filesArr[i].is_delete) {\n          formData.append('file' + i, filesArr[i]);\n        }\n      }\n      formData.append('title', this.$refs.e_ti_detail_input.value);\n      formData.append('description', this.$refs.e_cont_detail_input.value);\n      formData.append('bno', this.$refs.e_bno.value);\n      this.$axios.post('/service/question-fix', formData, {\n        headers: {\n          processData: false,\n          contentType: false,\n          dataType: 'text'\n        }\n      }).then(res => {\n        alert('글이 수정되었습니다.');\n        location.href = res.data;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["url","location","search","replace","fileNo","filesArr","Array","filesArr_del","Header","name","data","filelist","s_dto","user","JSON","parse","sessionStorage","getItem","components","created","href","getaxios","methods","$axios","get","params","then","res","stringify","service_allservice","service_question_member","service_question_public","e_file_detail_input_change","maxFileCount","allFileCount","document","querySelectorAll","length","possibleFileCount","alert","file","$refs","e_file_detail_input","files","is_delete","push","reader","FileReader","onload","readAsDataURL","html","file_group","append","querySelector","value","deleteFile","num","remove","prev_deleteFile","e_btn_fix_btn_click","e","preventDefault","formData","FormData","i","e_ti_detail_input","e_cont_detail_input","e_bno","post","headers","processData","contentType","dataType"],"sourceRoot":"","sources":["C:\\Users\\82106\\Desktop\\all\\frontend\\src\\views\\service\\question_fix.vue"],"sourcesContent":["<template>\n  <div id=\"bodystyle\">\n    <Header />\n    <section>\n\t\t<div id=\"j_wrap\">\n\t\t\t<div id=\"j_box\">\n\n\t\t\t\t<div class=\"e_div\">\n\t\t\t\t\t<!-- 왼쪽 카데고리 -->\n\t\t\t\t\t<nav class=\"e_nav\">\n\t\t\t\t\t\t<!-- 문의 전체보기 -->\n\t\t\t\t\t\t<div class=\"e_nav_all\" @click=\"service_allservice\">\n\t\t\t\t\t\t\t문의 전체보기\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!-- 자주하는 질문 -->\n\t\t\t\t\t\t<div class=\"e_nav_question\" @click=\"service_question_member\">\n\t\t\t\t\t\t\t<div class=\"e_que_div\">자주하는 질문</div>\n\t\t\t\t\t\t\t<div><img src=\"@/assets/img/service/category_click.png\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!-- 공개 건의함 -->\n\t\t\t\t\t\t<div class=\"e_nav_onebyone\" @click=\"service_question_public\">공개 건의함</div>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<!-- 오른쪽 내용 -->\n\t\t\t\t\t<div class=\"e_right\">\n\t\t\t\t\t\t<!-- 상단 -->\n\t\t\t\t\t\t<div class=\"e_header\">\n\t\t\t\t\t\t\t<div class=\"e_hd_top\">고객센터 &gt; 자주하는 질문 &gt; 글수정[관리자]</div>\n\t\t\t\t\t\t\t<div class=\"e_hd_top_title\">글수정[관리자]</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- 카데고리별 -->\n\t\t\t\t\t\t<form name=\"e_fix_form\">\n\t\t\t\t\t\t\t<div class=\"e_content\">\n\t\t\t\t\t\t\t\t<!-- 글쓰기 제목 -->\n\t\t\t\t\t\t\t\t<div class=\"e_con_title\">\n\t\t\t\t\t\t\t\t\t<div class=\"e_ti_title\">제목</div>\n\t\t\t\t\t\t\t\t\t<div class=\"e_ti_detail\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"title\" ref=\"e_ti_detail_input\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"e_ti_detail_input\" :value=\"s_dto.title\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<!-- 글쓰기 내용 -->\n\t\t\t\t\t\t\t\t<div class=\"e_con_content\">\n\t\t\t\t\t\t\t\t\t<div class=\"e_cont_title\">내용</div>\n\t\t\t\t\t\t\t\t\t<div class=\"e_cont_detail\">\n\t\t\t\t\t\t\t\t\t\t<textarea name=\"description\" ref=\"e_cont_detail_input\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"e_cont_detail_input\"><template v-html=\"s_dto.description\"></template></textarea>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<!-- 첨부파일 -->\n\t\t\t\t\t\t\t\t<div class=\"e_con_file\">\n\t\t\t\t\t\t\t\t\t<div class=\"e_file_title\">첨부파일</div>\n\t\t\t\t\t\t\t\t\t<div class=\"e_file_detail\">\n\t\t\t\t\t\t\t\t\t\t<!-- 파일 업로드 -->\n\t\t\t\t\t\t\t\t\t\t<label class=\"e_file_btn\" for=\"e_file_detail_input\">\n\t\t\t\t\t\t\t\t\t\t\t파일 업로드\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t@change=\"e_file_detail_input_change\" ref=\"e_file_detail_input\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"e_file_detail_input\" style=\"display:none\" multiple>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<!-- 파일 업로드 -->\n\t\t\t\t\t\t\t\t<div class=\"e_con_file_upload\">\n\t\t\t\t\t\t\t\t\t<div class=\"e_file_title\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"file_group\">\n\t\t\t\t\t\t\t\t\t\t<div v-for=\"(flist,i) in filelist\" :key=\"i\"\n\t\t\t\t\t\t\t\t\t\tid=\"prev_file{{flist.file_order}}\" class=\"fileList\" ref=\"fileList\">\n\t\t\t\t\t\t\t\t           <p class=\"filename\">{{flist.filename}}</p>\n\t\t\t\t\t\t\t\t           <a class=\"filedelete\" @click=\"prev_deleteFile(flist.file_order);\">❌</a>\n\t\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<!-- 글쓰기 버튼 -->\n\t\t\t\t\t\t\t<div class=\"e_button\">\n\t\t\t\t\t\t\t\t<div class=\"e_btn_fix\">\n\t\t\t\t\t\t\t\t\t<!-- 게시판 데이터 보내기 -->\n\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"bno\" id=\"e_bno\" ref=\"e_bno\"\n\t\t\t\t\t\t\t\t\t\t:value=\"s_dto.bno\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"수정 완료\" id=\"e_btn_fix_btn\"\n\t\t\t\t\t\t\t\t\t\t@click=\"e_btn_fix_btn_click\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t</section>\n  </div>\n</template>\n\n<script>\nvar url = location.search;\nurl = url.replace('?bno=','');\n// 파일이 늘때마다 고유 번호가 저장됨 (삭제해도 지워지지 않음)\nvar fileNo = 0;\n// 전체 파일 목록을 담을 배열 (삭제해도 지워지지 않음)\nvar filesArr = new Array();\n// 삭제한 파일들의 고유 번호 담기\nvar filesArr_del = new Array();\nimport Header from \"@/components/common/Header.vue\";\nexport default {\n\tname: \"question_fix\",\n\tdata : function() {\n\t\treturn {\n\t\t\tfilelist : null,\n\t\t\ts_dto :  null,\n\t\t\tuser : JSON.parse(sessionStorage.getItem('user')),\n\t\t}\n\t},\n\tcomponents: {\n\t\tHeader,\n\t},\n\tcreated(){\n\t\tif(sessionStorage.getItem('user') != null){\n\t\t\tlocation.href=\"/service/question-member\";\n\t\t}\n\t\tthis.getaxios();\n\t},\n\tmethods: {\n\t\tgetaxios(){\n\t\t\tthis.$axios.get('/service/question-fix', {\n\t\t\t\tparams: {\n\t\t\t\t\t\"bno\":url\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((res)=>{\n\t\t\t\tif(res.data.filelist!=null){\n\t\t\t\t\tthis.filelist = JSON.parse(JSON.stringify(res.data.filelist));\n\t\t\t\t}\n\t\t\t\tif(res.data.s_dto!=null){\n\t\t\t\t\tthis.s_dto = JSON.parse(JSON.stringify(res.data.s_dto));\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tservice_allservice: function(){\n\t\t\tlocation.href='/service/allService'\n\t\t},\n\t\tservice_question_member: function(){\n\t\t\tlocation.href='/service/question-member'\n\t\t},\n\t\tservice_question_public: function(){\n\t\t\tlocation.href='/service/question-public'\n\t\t},\n\t\te_file_detail_input_change:function (){\n\t\t\t// 첨부파일 최대 개수\n\t\t\tvar maxFileCount = 5;\n\t\t\t// 기존 추가된 첨부파일 갯수\n\t\t\tvar allFileCount = document.querySelectorAll('.fileList').length;\n\t\t\t// 첨부 가능한 파일 추가 갯수\n\t\t\tvar possibleFileCount = maxFileCount - allFileCount;\n\t\t\t// 첨부파일 최대 갯수 한도 초과\n\t\t\tif (possibleFileCount == 0) {\n\t\t\t\talert(\"첨부파일은 최대 \" + maxFileCount + \"개 까지만 첨부가 가능합니다.\");\n\t\t\t}\n\t\t\t// 현재 선택된 파일 갯수, 첨부 가능한 파일 갯수 중 최솟값 (추가 가능한 갯수까지 한정으로 추가) \n\t\t\tfor (const file of this.$refs.e_file_detail_input.files) {\n\t\t\t\tfile.is_delete = false;\n\t\t\t\tfilesArr.push(file);\n\t\t\t\t// 파일 내용 읽기\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\t// onload = 읽기 동작이 성공적으로 완료되었을 때\n\t\t\t\treader.onload = function () {\n\t\t\t\t\t// 개별 파일을 저장\n\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t};\n\t\t\t\t// 목록 추가\n\t\t\t\tlet html = '';\n\t\t\t\thtml += '<div id=\"file' + fileNo + '\" class=\"fileList\" ref=\"fileList\">';\n\t\t\t\thtml += '   <p class=\"filename\">' + file.name + '</p>';\n\t\t\t\thtml += '   <a class=\"filedelete\" onclick=\"deleteFile(' + fileNo + ');\">❌</a>';\n\t\t\t\thtml += '</div>';\n\t\t\t\tthis.$refs.file_group.append(html);\n\t\t\t\tfileNo++;\n\t\t\t}\n\t\t\t// 추가한 뒤 초기화\n\t\t\tdocument.querySelector(\"input[type=file]\").value = \"\";\n\t\t},\n\t\tdeleteFile(num){\n\t\t\t// 이미 삭제된 파일 해당 인덱스에 .is_delete = true 라는 키와 값을 추가해 구분\n\t\t\tdocument.querySelector(\"#file\" + num).remove();\n\t\t\tfilesArr[num].is_delete = true;\n\t\t},\n\t\tprev_deleteFile(num){\n\t\t\tdocument.querySelector(\"#prev_file\" + num).remove();\n   \t\t \tfilesArr_del.push(num);\n\t\t},\n\t\te_btn_fix_btn_click:function (e){\n\t\t\te.preventDefault();\n\t\t\t// 폼 데이터에 값 담기\n\t\t\tlet formData = new FormData();\n\t\t\t// 삭제한 파일 있으면 담기\n\t\t\tif (filesArr_del.length >= 1) {\n\t\t\t\tfor (let i = 0; i < filesArr_del.length; i++) {\n\t\t\t\t\tformData.append('file_del_num', filesArr_del[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// null 방지 파일 값 전달\n\t\t\t\tformData.append('file_del_num', \"\");\n\t\t\t}\n\t\t\t// 파일을 폼데이터에 담기\n\t\t\tfor (let i = 0; i < filesArr.length; i++) {\n\t\t\t\t// 삭제되지 않은 파일만 폼데이터에 담기\n\t\t\t\tif (!filesArr[i].is_delete) {\n\t\t\t\t\tformData.append('file'+i, filesArr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tformData.append('title', this.$refs.e_ti_detail_input.value);\n\t\t\tformData.append('description', this.$refs.e_cont_detail_input.value);\n\t\t\tformData.append('bno', this.$refs.e_bno.value);\n\t\t\tthis.$axios.post('/service/question-fix', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false,\n\t\t\t\t\tdataType:'text',\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((res)=>{\n\t\t\t\talert('글이 수정되었습니다.');\n\t\t\t\tlocation.href= res.data;\n\t\t\t})\n\t\t}\n\t}\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\t@import \"@/assets/scss/service/question_fix.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}