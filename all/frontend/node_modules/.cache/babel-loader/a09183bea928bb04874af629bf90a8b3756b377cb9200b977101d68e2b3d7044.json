{"ast":null,"code":"import Header from \"@/components/common/Header.vue\";\nexport default {\n  name: \"join\",\n  components: {\n    Header\n  },\n  created() {\n    if (sessionStorage.getItem('user') != null) {\n      location.href = \"/\";\n    }\n  },\n  methods: {\n    member_login: function () {\n      location.href = '/member/login';\n    },\n    // 아이디 중복 확인\n    e_idCheck_click: function () {\n      if (this.$refs.e_id_check.style.display == \"none\" && this.$refs.e_input_id.value.length != 0 && this.$refs.e_id_confirm.style.display == \"none\") {\n        this.$axios.post('/member/join', null, {\n          params: {\n            e_Check_click: \"e_join_idcheck\",\n            e_input: this.$refs.e_input_id.value\n          }\n        }).then(res => {\n          if (res.data == \"0\") {\n            this.$refs.e_id_check.style.display = \"block\";\n          } else {\n            alert('이미 존재하는 아이디 입니다.');\n          }\n        });\n      } else {\n        alert(\"아이디를 제대로 입력해주세요.\");\n      }\n    },\n    // 아이디 중복 확인 후 건드렸을 때\n    e_idCheck_keyup: function () {\n      this.$refs.e_id_check.style.display = \"none\";\n      // 아이디 유효성 검사\n      if (/^[a-z0-9]{5,9}$/.test(this.$refs.e_input_id.value) == true && /[a-z]*[0-9]/.test(this.$refs.e_input_id.value) == true && /[a-z]+/.test(this.$refs.e_input_id.value) == true && /[0-9]+/.test(this.$refs.e_input_id.value) == true) {\n        this.$refs.e_id_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_id_confirm.style.display = \"block\";\n      }\n    },\n    // 비밀번호 유효성 검사\n    e_input_pass_keyup: function () {\n      if (/^[a-zA-Z0-9!@#*]{5,9}$/.test(this.$refs.e_input_pass.value) == true && /[a-z]*[A-Z]*[0-9]*[@!#*]/.test(this.$refs.e_input_pass.value) == true && /[a-z]+/.test(this.$refs.e_input_pass.value) == true && /[A-Z]+/.test(this.$refs.e_input_pass.value) == true && /[0-9]+/.test(this.$refs.e_input_pass.value) == true && /[@!#*]+/.test(this.$refs.e_input_pass.value) == true) {\n        this.$refs.e_pass_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_pass_confirm.style.display = \"block\";\n      }\n      if (this.$refs.e_input_pass_more.value == this.$refs.e_input_pass.value) {\n        this.$refs.e_pass_more_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_pass_more_confirm.style.display = \"block\";\n      }\n    },\n    // 비밀번호 확인 유효성 검사\n    e_input_pass_more_keyup: function () {\n      if (this.$refs.e_input_pass_more.value == this.$refs.e_input_pass.value) {\n        this.$refs.e_pass_more_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_pass_more_confirm.style.display = \"block\";\n      }\n    },\n    // 이름 유효성 검사\n    e_input_name_keyup: function () {\n      if (/^[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{2,3}$/.test(this.$refs.e_input_name.value) == true) {\n        this.$refs.e_name_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_name_confirm.style.display = \"block\";\n      }\n    },\n    // 닉네임 유효성 검사\n    e_input_nickname_keyup: function () {\n      // 중복 확인 후 건드렸을 때\n      this.$refs.e_nick_check.style.display = \"none\";\n      // 그 외\n      if (/^[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{2,5}$/.test(this.$refs.e_input_nickname.value) == true) {\n        this.$refs.e_nickname_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_nickname_confirm.style.display = \"block\";\n      }\n    },\n    // 닉네임 중복확인 버튼 - 클릭\n    e_nickCheck_click: function () {\n      if (this.$refs.e_nick_check.style.display == \"none\" && this.$refs.e_input_nickname.value.length != 0 && this.$refs.e_nickname_confirm.style.display == \"none\") {\n        this.$axios.post('/member/join', null, {\n          params: {\n            e_Check_click: \"e_join_nickcheck\",\n            e_input: this.$refs.e_input_nickname.value\n          }\n        }).then(res => {\n          if (res.data == \"0\") {\n            this.$refs.e_nick_check.style.display = \"block\";\n          } else {\n            alert('이미 존재하는 닉네임 입니다.');\n          }\n        });\n      } else {\n        alert(\"닉네임을 제대로 입력해주세요.\");\n      }\n    },\n    // 생년월일 유효성 검사\n    e_input_birth_keyup: function () {\n      if (/^[0-9]*$/.test(this.$refs.e_input_birth.value.substring(0, 4)) == true && /^[0-9]*$/.test(this.$refs.e_input_birth.value.substring(5, 7)) == true && /^[0-9]*$/.test(this.$refs.e_input_birth.value.substring(8)) == true && this.$refs.e_input_birth.value.length == 10 && this.$refs.e_input_birth.value[4] == '-' && this.$refs.e_input_birth.value[7] == '-') {\n        this.$refs.e_birth_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_birth_confirm.style.display = \"block\";\n      }\n    },\n    // 성별 유효성 검사\n    e_sel_gender_click: function () {\n      if (this.$refs.e_sel_gender.value == 'e_none') {\n        this.$refs.e_gender_confirm.style.display = \"block\";\n      } else {\n        this.$refs.e_gender_confirm.style.display = \"none\";\n      }\n    },\n    // 이메일 유효성 검사\n    e_input_email_keyup: function () {\n      // eslint-disable-next-line\n      if (/^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/.test(this.$refs.e_input_email.value) === false) {\n        this.$refs.e_email_confirm.style.display = \"block\";\n      } else {\n        this.$refs.e_email_confirm.style.display = \"none\";\n      }\n    },\n    // 전화번호 유효성 검사\n    e_input_tel_keyup: function () {\n      if (/^01([0|1|6|7|8|9])$/.test(this.$refs.e_input_tel.value.substring(0, 3)) == true && this.$refs.e_input_tel.value.length == 13 && /^[0-9]*$/.test(this.$refs.e_input_tel.value.substring(4, 8)) == true && /^[0-9]*$/.test(this.$refs.e_input_tel.value.substring(9)) == true && this.$refs.e_input_tel.value[3] == '-' && this.$refs.e_input_tel.value[8] == '-') {\n        this.$refs.e_tel_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_tel_confirm.style.display = \"block\";\n      }\n    },\n    // 키 유효성 검사\n    e_input_height_keyup: function () {\n      if (/^[0-9]{3,3}$/.test(this.$refs.e_input_height.value) == true && this.$refs.e_input_height.value > 100 && this.$refs.e_input_height.value < 200) {\n        this.$refs.e_height_confirm.style.display = \"none\";\n      } else {\n        this.$refs.e_height_confirm.style.display = \"block\";\n      }\n    },\n    // 이미지 미리보기\n    e_input_pro_img_change: function () {\n      this.$refs.e_pro_img_confirm.style.display = \"block\";\n      var e_pro_img_view_img = this.$refs.e_pro_img_view_img;\n      var e_pro_img_confirm = this.$refs.e_pro_img_confirm;\n      var e_pro_img_name = this.$refs.e_pro_img_name;\n      var e_input_pro_img = this.$refs.e_input_pro_img;\n      if (this.$refs.e_input_pro_img.files && this.$refs.e_input_pro_img.files[0]) {\n        // 파일 객체를 읽어줌\n        var reader = new FileReader();\n        reader.onload = function (e) {\n          e_pro_img_name.innerHTML = \"파일명 : \" + e_input_pro_img.files[0].name;\n          e_pro_img_view_img.src = e.target.result;\n          e_pro_img_confirm.style.display = \"none\";\n          e_pro_img_view_img.style.paddingTop = \"30px\";\n          e_pro_img_view_img.style.width = \"200px\";\n          e_pro_img_view_img.style.height = \"200px\";\n        };\n        reader.readAsDataURL(this.$refs.e_input_pro_img.files[0]);\n      } else {\n        e_pro_img_view_img.style.width = \"0px\";\n        e_pro_img_view_img.style.height = \"0px\";\n        e_pro_img_view_img.style.paddingTop = \"0px\";\n        e_pro_img_name.innerHTML = \"\";\n        e_pro_img_view_img.src = \"\";\n        e_pro_img_confirm.style.display = \"block\";\n      }\n    },\n    // 이미지 삭제\n    e_delete_file_click: function () {\n      var e_input_pro_img = this.$refs.e_input_pro_img;\n      var e_pro_img_view_img = this.$refs.e_pro_img_view_img;\n      var e_pro_img_confirm = this.$refs.e_pro_img_confirm;\n      var e_pro_img_name = this.$refs.e_pro_img_name;\n      e_input_pro_img.value = \"\";\n      // eslint-disable-next-line \n      if (e_input_pro_img.files && e_input_pro_img.files[0]) {} else {\n        e_pro_img_view_img.style.width = \"0px\";\n        e_pro_img_view_img.style.height = \"0px\";\n        e_pro_img_name.innerHTML = \"\";\n        e_pro_img_view_img.src = \"\";\n        e_pro_img_confirm.style.display = \"block\";\n      }\n    },\n    // 가입 버튼\n    e_sub_btn_click(e) {\n      e.preventDefault();\n      if (this.$refs.e_id_confirm.style.display == \"block\" || this.$refs.e_input_id.value.length == 0 || this.$refs.e_id_check.style.display == \"none\") {\n        alert(\"아이디를 제대로 입력해주세요.\");\n        this.$refs.e_input_id.focus();\n      } else {\n        this.p_check();\n      }\n    },\n    // 비밀번호 체크\n    p_check() {\n      if (this.$refs.e_pass_confirm.style.display == \"block\" || this.$refs.e_input_pass.value.length == 0) {\n        alert('비밀번호를 제대로 입력해주세요.');\n        this.$refs.e_input_pass.focus();\n      } else {\n        this.p_more_check();\n      }\n    },\n    // 비밀번호 확인 체크\n    p_more_check() {\n      if (this.$refs.e_pass_more_confirm.style.display == \"block\" || this.$refs.e_input_pass_more.value.length == 0) {\n        alert('입력한 비밀번호가 맞지 않습니다.');\n        this.$refs.e_input_pass_more.focus();\n      } else {\n        this.nick_check();\n      }\n    },\n    // 닉네임 체크\n    nick_check() {\n      if (this.$refs.e_nickname_confirm.style.display == \"block\" || this.$refs.e_input_nickname.value.length == 0 || this.$refs.e_nick_check.style.display == \"none\") {\n        alert('닉네임을 입력해주세요.');\n        this.$refs.e_input_nickname.focus();\n      } else {\n        this.e_check();\n      }\n    },\n    // 이메일 체크\n    e_check() {\n      if (this.$refs.e_email_confirm.style.display == \"block\"\n      // eslint-disable-next-line\n      || /^[A-Za-z0-9_\\.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z0-9\\-]+/.test(this.$refs.e_input_email.value) === false) {\n        alert('이메일을 제대로 입력해주세요.');\n        this.$refs.e_input_email.focus();\n      } else {\n        this.t_check();\n      }\n    },\n    // 전화번호 체크\n    t_check() {\n      if (this.$refs.e_tel_confirm.style.display == \"block\" || /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/.test(this.$refs.e_input_tel.value) === false) {\n        alert('전화번호를 제대로 입력해주세요.');\n        this.$refs.e_input_tel.focus();\n      } else {\n        this.height();\n      }\n    },\n    // 키 체크\n    height() {\n      if (this.$refs.e_height_confirm.style.display == \"block\" || this.$refs.e_input_height.value.length == 0) {\n        alert('키를 입력해주세요.');\n        this.$refs.e_input_height.focus();\n      } else {\n        this.join();\n      }\n    },\n    // 가입 승인\n    join() {\n      // 생년월일 제대로 기입 안되있을시 기본값 저장\n      if (/^[0-9]*$/.test(this.$refs.e_input_birth.value.substring(0, 4)) == false || /^[0-9]*$/.test(this.$refs.e_input_birth.value.substring(5, 7)) == false || /^[0-9]*$/.test(this.$refs.e_input_birth.value.substring(8)) == false || this.$refs.e_input_birth.value.length != 10 || this.$refs.e_input_birth.value[4] != '-' || this.$refs.e_input_birth.value[7] != '-') {\n        this.$refs.e_input_birth.value = \"2000-01-01\";\n      }\n      // 폼 변수 저장\n      var e_mainform = document.querySelector('#e_mainform');\n      var formData = new FormData(e_mainform);\n      // 폼 데이터 보내기\n      this.$axios.post('/member/joinComplet', formData, {\n        headers: {\n          cache: false,\n          dataType: 'text',\n          contentType: false,\n          processData: false\n        }\n      }).then(res => {\n        if (res.data == \"통과\") {\n          alert('회원가입이 완료되었습니다. \\n잠시후, 로그인 페이지로 돌아갑니다.');\n          location.href = '/member/login';\n        } else {\n          alert(res.data);\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}